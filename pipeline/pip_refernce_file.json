{
	"name": "pip_refernce_file",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ADLS_PARAM",
						"type": "DatasetReference",
						"parameters": {
							"CONTAINER": "adftraining",
							"DIRECTORY": "parameter",
							"FILENAME": "param_file.csv"
						}
					},
					"fieldList": [
						"structure"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Get Metadata2",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ADLS_PARAM",
						"type": "DatasetReference",
						"parameters": {
							"CONTAINER": "adftraining",
							"DIRECTORY": "STAGE",
							"FILENAME": "learnit_batch_employee_.csv"
						}
					},
					"fieldList": [],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Metadata2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Get Metadata1').output.structure,activity('Get Metadata2').output.structure)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "fail wait",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 2
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "TRUE wait",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 2
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "ADF_TRAINING_NEW"
		},
		"annotations": []
	}
}