{
	"name": "dataflow_FLATTEN_TRF",
	"properties": {
		"folder": {
			"name": "ADF_TRAINING_DATAFLOW"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ADF_TRAIN_SQLDB",
						"type": "DatasetReference"
					},
					"name": "FLATTENTRANSFORMATION"
				},
				{
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ADF_TRAIN_SQLDB",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Claim_Number as integer,",
				"          Claimant_Name as string,",
				"          Claim_Type as string,",
				"          Location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> FLATTENTRANSFORMATION",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> source1",
				"derivedColumn1 foldDown(unroll(Claim_Type),",
				"     mapColumn(",
				"          Claim_Number,",
				"          Claimant_Name,",
				"          Claim_Type,",
				"          Location",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"FLATTENTRANSFORMATION derive(Claim_Type = split(',',Claim_Type)) ~> derivedColumn1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}