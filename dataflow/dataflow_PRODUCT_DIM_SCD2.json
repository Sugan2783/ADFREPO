{
	"name": "dataflow_PRODUCT_DIM_SCD2",
	"properties": {
		"folder": {
			"name": "ADF_TRAINING_DATAFLOW"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ADLS_PARAM",
						"type": "DatasetReference"
					},
					"name": "productjoin"
				},
				{
					"dataset": {
						"referenceName": "PRODUCT_DIM_SCD2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "PRODUCT_DIM_SCD2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "PRODUCT_DIM_SCD2",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "split1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PRODUCT_ID as short,",
				"          PRODUCT_NAME as string,",
				"          PRODUCT_PRICE as double,",
				"          PRODUCT_DESCRIPTION as string,",
				"          IS_ACTIVE as string,",
				"          PRODUCT_SUBCATEGORY_ID as short,",
				"          PRODUCT_SUBCATEGORY_NAME as string,",
				"          PRODUCT_SIZE as string,",
				"          PRODUCT_CATEGORY_NAME as string,",
				"          PRODUCT_CATEGORY_ID as short,",
				"          CREATE_USER_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> productjoin",
				"source(output(",
				"          Surr_Product_kEY as integer,",
				"          Product_ID as integer,",
				"          Product_Name as string,",
				"          Product_Price as decimal(5,2),",
				"          Is_Active as string,",
				"          PRODUCT_CATEGORY_ID as string,",
				"          Product_Category_Name as string,",
				"          Product_SubCategory_ID as integer,",
				"          Product_SubCategory_Name as string,",
				"          Product_Size as string,",
				"          Product_Description as string,",
				"          Eff_Start_Date as date,",
				"          Eff_End_Date as date,",
				"          DIM_CREATE_DATE as date,",
				"          FLAG as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"productjoin, source1 lookup(productjoin@PRODUCT_ID == source1@Product_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 derive(src_tgt_MD5 = iif(isNull(Surr_Product_kEY), 'I',iif(!isNull(Surr_Product_kEY) && :src_md5 != :tgt_md5,'U', '')),",
				"          SRC_md5 = :src_md5,",
				"          TGT_md5 = :tgt_md5,",
				"          src_md5 := md5(PRODUCT_NAME,PRODUCT_PRICE,PRODUCT_DESCRIPTION,IS_ACTIVE,PRODUCT_SUBCATEGORY_ID,PRODUCT_SUBCATEGORY_NAME,PRODUCT_SIZE,PRODUCT_CATEGORY_NAME,PRODUCT_CATEGORY_ID),",
				"          tgt_md5 := md5(source1@Product_Name,source1@Product_Price,source1@Is_Active,source1@PRODUCT_CATEGORY_ID,source1@Product_Category_Name,source1@Product_SubCategory_ID,source1@Product_SubCategory_Name,source1@Product_Size,source1@Product_Description)) ~> derivedColumn1",
				"surrogateKey1 split(src_tgt_MD5 == 'I',",
				"     src_tgt_MD5 == 'U',",
				"     disjoint: false) ~> split1@(INSERT, UPDATE)",
				"split1@INSERT derive(EFF_START_DATE = currentDate(),",
				"          FLAG = 'Y') ~> derivedColumn2",
				"derivedColumn1 keyGenerate(output(dim_Product_key as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"split1@UPDATE derive(FLAG = 'N',",
				"          EFF_END_DATE = addDays(currentDate(), -1)) ~> derivedColumn3",
				"derivedColumn3 alterRow(updateIf(1 ==1)) ~> alterRow1",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['Surr_Product_kEY'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
			]
		}
	}
}