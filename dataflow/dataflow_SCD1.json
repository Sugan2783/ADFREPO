{
	"name": "dataflow_SCD1",
	"properties": {
		"folder": {
			"name": "ADF_TRAINING_DATAFLOW"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ADLS_PARAM",
						"type": "DatasetReference"
					},
					"name": "stgproduct"
				},
				{
					"dataset": {
						"referenceName": "ADF_TRAIN_SQLDB",
						"type": "DatasetReference"
					},
					"name": "productdimnew"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PRODUCT_ID as short,",
				"          PRODUCT_NAME as string,",
				"          PRODUCT_PRICE as string,",
				"          PRODUCT_DESCRIPTION as string,",
				"          CALORIES as short,",
				"          IS_ACTIVE as string,",
				"          PRODUCT_SUBCATEGORY_ID as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> stgproduct",
				"source(output(",
				"          Surr_Product_kEY as integer,",
				"          Product_ID as integer,",
				"          Product_Name as string,",
				"          Product_Price as decimal(5,2),",
				"          Is_Active as string,",
				"          PRODUCT_CATEGORY_ID as string,",
				"          Product_Category_Name as string,",
				"          Product_SubCategory_ID as integer,",
				"          Product_SubCategory_Name as string,",
				"          Product_Size as string,",
				"          Product_Description as string,",
				"          Eff_Start_Date as date,",
				"          Eff_End_Date as date,",
				"          DIM_CREATE_DATE as date,",
				"          FLAG as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> productdimnew",
				"stgproduct, productdimnew lookup(stgproduct@PRODUCT_ID == productdimnew@Product_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     partitionBy('hash', 1),",
				"     broadcast: 'auto')~> lookup1",
				"select2 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"lookup1 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2"
			]
		}
	}
}