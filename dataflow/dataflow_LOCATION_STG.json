{
	"name": "dataflow_LOCATION_STG",
	"properties": {
		"folder": {
			"name": "PROJECT_DATAFLOW"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_LOCATION",
						"type": "DatasetReference"
					},
					"name": "STGSTORELOCATION"
				},
				{
					"dataset": {
						"referenceName": "STG_STATE_LOCATION",
						"type": "DatasetReference"
					},
					"name": "STGSTATELOCATION"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLDB_LOCATIONS",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          STORE_LOCATION_ID as short,",
				"          STORE_NAME as string,",
				"          STORE_ADDRESS as string,",
				"          STORE_PHONE_NUMBER as string,",
				"          STORE_OPEN_TIME as string,",
				"          STORE_CLOSE_TIME as string,",
				"          STATE_COUNTRY_ID as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> STGSTORELOCATION",
				"source(output(",
				"          STATE_COUNTRY_ID as short,",
				"          STATE_NAME as string,",
				"          STATE_ABBREVATION as string,",
				"          STATE_COUNTRY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> STGSTATELOCATION",
				"STGSTORELOCATION, STGSTATELOCATION join(STGSTORELOCATION@STATE_COUNTRY_ID == STGSTATELOCATION@STATE_COUNTRY_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          STORE_LOCATION_ID,",
				"          STORE_NAME,",
				"          STORE_ADDRESS,",
				"          STORE_PHONE_NUMBER,",
				"          STORE_OPEN_TIME,",
				"          STORE_CLOSE_TIME,",
				"          STATE_NAME,",
				"          STATE_COUNTRY",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 keyGenerate(output(LOCATION_DIM_KEY as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(CREATE_USER_DATE = currentDate()) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          LOCATION_DIM_KEY,",
				"          STORE_LOCATION_ID,",
				"          STORE_NAME,",
				"          STORE_ADDRESS,",
				"          STORE_PHONE_NUMBER,",
				"          STORE_OPEN_TIME,",
				"          STORE_CLOSE_TIME,",
				"          STATE_NAME,",
				"          STATE_COUNTRY,",
				"          CREATE_USER_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     partitionBy('hash', 1),",
				"     preCommands: [],",
				"     postCommands: []) ~> sink1"
			]
		}
	}
}